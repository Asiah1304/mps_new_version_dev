{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/syahrilsulaiman/mps_new_version/src/ProSidebar/ProSidebar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, createContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nexport const SidebarContext = /*#__PURE__*/createContext({\n  collapsed: false,\n  rtl: false,\n  toggled: false\n});\n\nconst ProSidebar = ({\n  children,\n  className,\n  width,\n  collapsed,\n  rtl,\n  toggled,\n  image,\n  breakPoint,\n  onToggle,\n  ...rest\n}, ref) => {\n  _s();\n\n  const [sidebarState, setSidebarState] = useState({\n    collapsed: typeof collapsed === 'undefined' ? false : collapsed,\n    rtl: typeof rtl === 'undefined' ? false : rtl,\n    toggled: typeof toggled === 'undefined' ? false : toggled\n  });\n  const sidebarRef = ref || /*#__PURE__*/React.createRef();\n\n  const handleToggleSidebar = () => {\n    const toggleValue = sidebarState.toggled;\n    setSidebarState({ ...sidebarState,\n      toggled: !toggleValue\n    });\n\n    if (onToggle) {\n      onToggle(!toggleValue);\n    }\n  };\n\n  useEffect(() => {\n    setSidebarState({ ...sidebarState,\n      collapsed,\n      rtl,\n      toggled\n    });\n  }, [collapsed, rtl, toggled]);\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: sidebarState,\n    children: /*#__PURE__*/_jsxDEV(\"div\", { ...rest,\n      ref: sidebarRef,\n      className: classNames('pro-sidebar', className, breakPoint, {\n        collapsed,\n        rtl,\n        toggled\n      }),\n      style: {\n        width\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pro-sidebar-inner\",\n        children: [image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"sidebar background\",\n          className: \"sidebar-bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 20\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pro-sidebar-layout\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        onClick: handleToggleSidebar,\n        onKeyPress: handleToggleSidebar,\n        role: \"button\",\n        tabIndex: 0,\n        \"aria-label\": \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProSidebar, \"QDBRBvOk9VIrPAcshsWBciNJ0Yk=\");\n\n_c = ProSidebar;\nexport default _c2 = /*#__PURE__*/forwardRef(ProSidebar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/syahrilsulaiman/mps_new_version/src/ProSidebar/ProSidebar.tsx"],"names":["React","forwardRef","createContext","useEffect","useState","classNames","SidebarContext","collapsed","rtl","toggled","ProSidebar","children","className","width","image","breakPoint","onToggle","rest","ref","sidebarState","setSidebarState","sidebarRef","createRef","handleToggleSidebar","toggleValue"],"mappings":"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","sourcesContent":["import React, { forwardRef, createContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nexport interface Props {\n  collapsed?: boolean;\n  rtl?: boolean;\n  toggled?: boolean;\n  width?: string | number;\n  image?: string;\n  className?: string;\n  children?: React.ReactNode;\n  breakPoint?: 'xl' | 'lg' | 'md' | 'sm' | 'xs';\n  onToggle?: (value: boolean) => void;\n}\n\nexport interface SidebarContextProps {\n  collapsed: boolean;\n  rtl: boolean;\n  toggled: boolean;\n}\n\nexport const SidebarContext = createContext<SidebarContextProps>({\n  collapsed: false,\n  rtl: false,\n  toggled: false,\n});\n\nconst ProSidebar: React.ForwardRefRenderFunction<unknown, Props> = (\n  { children, className, width, collapsed, rtl, toggled, image, breakPoint, onToggle, ...rest },\n  ref,\n) => {\n  const [sidebarState, setSidebarState] = useState({\n    collapsed: typeof collapsed === 'undefined' ? false : collapsed,\n    rtl: typeof rtl === 'undefined' ? false : rtl,\n    toggled: typeof toggled === 'undefined' ? false : toggled,\n  });\n\n  const sidebarRef: React.RefObject<HTMLDivElement> =\n    (ref as any) || React.createRef<HTMLDivElement>();\n\n  const handleToggleSidebar = () => {\n    const toggleValue = sidebarState.toggled;\n    setSidebarState({ ...sidebarState, toggled: !toggleValue });\n    if (onToggle) {\n      onToggle(!toggleValue);\n    }\n  };\n\n  useEffect(() => {\n    setSidebarState({ ...sidebarState, collapsed, rtl, toggled });\n  }, [collapsed, rtl, toggled]);\n\n  return (\n    <SidebarContext.Provider value={sidebarState}>\n      <div\n        {...rest}\n        ref={sidebarRef}\n        className={classNames('pro-sidebar', className, breakPoint, { collapsed, rtl, toggled })}\n        style={{ width }}\n      >\n        <div className=\"pro-sidebar-inner\">\n          {image ? <img src={image} alt=\"sidebar background\" className=\"sidebar-bg\" /> : null}\n          <div className=\"pro-sidebar-layout\">{children}</div>\n        </div>\n        <div\n          className=\"overlay\"\n          onClick={handleToggleSidebar}\n          onKeyPress={handleToggleSidebar}\n          role=\"button\"\n          tabIndex={0}\n          aria-label=\"overlay\"\n        />\n      </div>\n    </SidebarContext.Provider>\n  );\n};\n\nexport default forwardRef<unknown, Props>(ProSidebar);\n"]},"metadata":{},"sourceType":"module"}