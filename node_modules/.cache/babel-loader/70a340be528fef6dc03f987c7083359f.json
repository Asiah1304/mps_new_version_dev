{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/syahrilsulaiman/Desktop/mps_new_version_dev-1/src/Utils/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getEmail, getNOKP, getToken } from './Common'; // handle the private routes\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  if (sessionStorage.getToken(\"role\") == \"Admin\") {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => getToken() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => getToken() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/syahrilsulaiman/Desktop/mps_new_version_dev-1/src/Utils/PrivateRoute.js"],"names":["React","Route","Redirect","getEmail","getNOKP","getToken","PrivateRoute","component","Component","rest","sessionStorage","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,QAA5B,QAA4C,UAA5C,C,CAEA;;AACA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAEvD,MAAGC,cAAc,CAACL,QAAf,CAAwB,MAAxB,KAAmC,OAAtC,EAA8C;AAC5C,wBACE,QAAC,KAAD,OACMI,IADN;AAEE,MAAA,MAAM,EAAGE,KAAD,IAAWN,QAAQ,kBAAK,QAAC,SAAD,OAAeM;AAAf;AAAA;AAAA;AAAA;AAAA,cAAL,gBAAgC,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AAF7D;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,MAOK;AACH,wBACE,QAAC,KAAD,OACMN,IADN;AAEE,MAAA,MAAM,EAAGE,KAAD,IAAWN,QAAQ,kBAAK,QAAC,SAAD,OAAeM;AAAf;AAAA;AAAA;AAAA;AAAA,cAAL,gBAAgC,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AAF7D;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AAEF;;KAlBQT,Y;AAoBT,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getEmail, getNOKP, getToken } from './Common';\n\n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n\n  if(sessionStorage.getToken(\"role\") == \"Admin\"){\n    return (\n      <Route\n        {...rest}\n        render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n      />\n    )\n  }else{\n    return (\n      <Route\n        {...rest}\n        render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n      />\n    )\n  }\n  \n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}