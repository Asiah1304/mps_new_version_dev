{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ANSI - LI\\\\MyMPS\\\\mps_new_version_dev\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\nimport PrivateRoute from \"./Utils/PrivateRoute\";\nimport PublicRoute from \"./Utils/PublicRoute\";\nimport GoogleRoute from \"./Utils/GoogleRoute\";\nimport { getToken, getNOKP, getUser, getEmail, removeUserSession, setUserSession } from \"./Utils/Common\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport Setting from \"./Profile\";\nimport Bill from \"./BayarBill\";\nimport Home from \"./Home\";\nimport Register from \"./Register\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport GoogleLogin from \"./GoogleLogin\";\nimport NotFound from \"./NotFound\";\nimport \"./main.css\";\n\nfunction App() {\n  _s();\n\n  const [authLoading, setAuthLoading] = useState(true);\n  useEffect(() => {\n    if (getEmail() && getEmail()) {\n      var formdata = new FormData();\n      formdata.append(\"nokp\", getNOKP());\n      formdata.append(\"email\", getEmail());\n      var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      };\n      var urlAPI = \"https://mymps.corrad.my/int/api_generator.php?api_name=check_session\";\n      fetch(urlAPI, requestOptions).then(response => response.json()).then(result => {\n        setUserSession(btoa(result.data[0]), result.data[0][\"MPS_USERNAME\"], result.data[0][\"MPS_USERIC\"], result.data[0][\"MPS_USEREMAIL\"]);\n        setAuthLoading(false); // window.location.href=\"/home\";\n      }).catch(error => {\n        console.log(error);\n        removeUserSession();\n        setAuthLoading(false);\n      });\n    }\n  }, []);\n\n  if (authLoading && getToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"Checking Authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n              path: \"/login\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n              path: \"/register\",\n              component: Register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GoogleRoute, {\n              path: \"/verifyuser\",\n              component: GoogleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n              path: \"/forgotpassword\",\n              component: ForgotPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/home\",\n              component: Dashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/setting\",\n              component: Setting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/bill\",\n              component: Bill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              component: NotFound\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9coNn8RZrESC5zIAnzWHJSN1YG8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ANSI - LI/MyMPS/mps_new_version_dev/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","NavLink","PrivateRoute","PublicRoute","GoogleRoute","getToken","getNOKP","getUser","getEmail","removeUserSession","setUserSession","Login","Dashboard","Setting","Bill","Home","Register","ForgotPassword","GoogleLogin","NotFound","App","authLoading","setAuthLoading","formdata","FormData","append","requestOptions","method","body","redirect","urlAPI","fetch","then","response","json","result","btoa","data","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\r\n\r\nimport PrivateRoute from \"./Utils/PrivateRoute\";\r\nimport PublicRoute from \"./Utils/PublicRoute\";\r\nimport GoogleRoute from \"./Utils/GoogleRoute\";\r\nimport { getToken, getNOKP, getUser, getEmail, removeUserSession, setUserSession } from \"./Utils/Common\";\r\n\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Setting from \"./Profile\";\r\nimport Bill from \"./BayarBill\";\r\nimport Home from \"./Home\";\r\nimport Register from \"./Register\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport GoogleLogin from \"./GoogleLogin\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nimport \"./main.css\";\r\n\r\nfunction App() {\r\n\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n\r\n    if(getEmail() && getEmail())\r\n    {\r\n        var formdata = new FormData();\r\n        formdata.append(\"nokp\", getNOKP());\r\n        formdata.append(\"email\", getEmail());\r\n\r\n        var requestOptions = {\r\n        method: 'POST',\r\n        body: formdata,\r\n        redirect: 'follow'\r\n        };\r\n\r\n        var urlAPI = \"https://mymps.corrad.my/int/api_generator.php?api_name=check_session\";\r\n\r\n        fetch(urlAPI, requestOptions)\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n          \r\n          setUserSession(btoa(result.data[0]), result.data[0][\"MPS_USERNAME\"], result.data[0][\"MPS_USERIC\"], result.data[0][\"MPS_USEREMAIL\"]);\r\n          setAuthLoading(false);\r\n          // window.location.href=\"/home\";\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n          removeUserSession();\r\n          setAuthLoading(false);\r\n\r\n        });\r\n    }\r\n    \r\n  }, []);\r\n\r\n  if (authLoading && getToken()) {\r\n    return <div className=\"content\">Checking Authentication...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <div className=\"content\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <PublicRoute path=\"/login\" component={Login} />\r\n              <PublicRoute path=\"/register\" component={Register} />\r\n              <GoogleRoute path=\"/verifyuser\" component={GoogleLogin} />\r\n              <PublicRoute path=\"/forgotpassword\" component={ForgotPassword} />\r\n              <PrivateRoute path=\"/home\" component={Dashboard} />\r\n              <PrivateRoute path=\"/setting\" component={Setting} />\r\n              <PrivateRoute path=\"/bill\" component={Bill} />\r\n              <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}