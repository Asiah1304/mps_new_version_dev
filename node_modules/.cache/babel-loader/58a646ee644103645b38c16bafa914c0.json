{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\reactsession\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport Home from './Home';\nimport Register from './Register';\n\nfunction App() {\n  _s();\n\n  const [authLoading, setAuthLoading] = useState(true);\n  useEffect(() => {\n    const token = getToken();\n\n    if (!token) {\n      return;\n    }\n\n    var formdata = new FormData();\n    formdata.append(\"username\", username.value);\n    formdata.append(\"password\", password.value);\n    var requestOptions = {\n      method: 'POST',\n      body: formdata,\n      redirect: 'follow'\n    };\n    var urlAPI1 = 'https://mymps.corrad.my/int/api_generator.php?api_name=api_login';\n    var urlAPI2 = 'https://api.corrad.my/api/API-login';\n    fetch(urlAPI1, requestOptions).then(response => response.json()).then(result => {\n      //console.log(result);\n      setLoading(false);\n\n      if (result.status == \"unsuccess\") {\n        console.log(\"Wrong credentials. Please try again!\");\n        swal(\"Opss!\", \"Sila pastikan kata nama dan kata laluan anda sah\", \"error\");\n      } else if (result.status == \"success\") {\n        setUserSession(result.data[0].TOKEN, result.data[0].USERNAME);\n        swal(\"Bejaya!\", \"Login Berjaya!\", \"success\");\n        props.history.push('/dashboard');\n      }\n    }).catch(error => {\n      console.log(error);\n      swal(\"Opss!\", \"Your session has timed out. Please login back!\", \"error\").then(value => {\n        props.history.push('/');\n      });\n    });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"Checking Authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n              path: \"/login\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n              path: \"/daftar\",\n              component: Register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/dashboard\",\n              component: Dashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9coNn8RZrESC5zIAnzWHJSN1YG8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/reactsession/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","NavLink","axios","PrivateRoute","PublicRoute","getToken","removeUserSession","setUserSession","Login","Dashboard","Home","Register","App","authLoading","setAuthLoading","token","formdata","FormData","append","username","value","password","requestOptions","method","body","redirect","urlAPI1","urlAPI2","fetch","then","response","json","result","setLoading","status","console","log","swal","data","TOKEN","USERNAME","props","history","push","catch","error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\n\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport Home from './Home';\nimport Register from './Register';\n\nfunction App() {\n\n  const [authLoading, setAuthLoading] = useState(true);\n\n  useEffect(() => {\n\n    const token = getToken();\n    if (!token) {\n      return;\n    }\n \n    var formdata = new FormData();\n    formdata.append(\"username\", username.value);\n    formdata.append(\"password\", password.value);\n\n    var requestOptions = {\n      method: 'POST',\n      body: formdata,\n      redirect: 'follow'\n    };\n\n    var urlAPI1 = 'https://mymps.corrad.my/int/api_generator.php?api_name=api_login';\n    var urlAPI2 = 'https://api.corrad.my/api/API-login';\n\n    fetch(urlAPI1, requestOptions)\n    .then(response => response.json())\n    .then(result => {\n\n      //console.log(result);\n      setLoading(false);\n\n      if(result.status == \"unsuccess\")\n      {\n        console.log(\"Wrong credentials. Please try again!\");\n        swal(\"Opss!\", \"Sila pastikan kata nama dan kata laluan anda sah\", \"error\");\n      }\n      else if(result.status == \"success\")\n      {\n        setUserSession(result.data[0].TOKEN, result.data[0].USERNAME);\n\n        swal(\"Bejaya!\", \"Login Berjaya!\", \"success\");\n        props.history.push('/dashboard');\n      }\n    })\n    .catch(error => {\n\n      console.log(error);\n      swal(\"Opss!\", \"Your session has timed out. Please login back!\", \"error\")\n      .then((value) => {\n        props.history.push('/');\n      })\n\n    });\n  }, []);\n \n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          {/* <div className=\"header\">\n            <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n            <NavLink activeClassName=\"active\" to=\"/login\">Login</NavLink><small>(Access without token only)</small>\n            <NavLink activeClassName=\"active\" to=\"/dashboard\">Dashboard</NavLink><small>(Access with token only)</small>\n          </div> */}\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <PublicRoute path=\"/login\" component={Login} />\n              <PublicRoute path=\"/daftar\" component={Register} />\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}